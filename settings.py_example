import logging
import socket
import collections
import os

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
SECRET = ''
DEBUG = True

COIN_ADDRESS_LENGTH = [98, 186]
COINCODE = ''
PSQL_HOST = os.getenv('PSQL_HOST', '127.0.0.1:5432')
PSQL_DB = os.getenv('PSQL_DB', 'fundingdb')
PSQL_USER = os.getenv('PSQL_USER', 'fundinguser')
PSQL_PASS = os.getenv('PSQL_PASS', 'pass')

OPENID_ENABLED = False
OPENID_REALM = "master"
OPENID_URL = f"https://auth.wrkz.work/auth/realms/{OPENID_REALM}/protocol/openid-connect"
OPENID_CLIENT_ID = os.getenv('OPENID_CLIENT_ID', 'clientid')
OPENID_CLIENT_SECRET = os.getenv('OPENID_CLIENT_SECRET', 'secret')
OPENID_REDIRECT_URI = "https://funding.wrkz.work/fund-auth/"

SQLALCHEMY_DATABASE_URI = os.getenv('SQLALCHEMY_DATABASE_URI', 'postgresql://{user}:{pw}@localhost/{db}').format(user=PSQL_USER, pw=PSQL_PASS, db=PSQL_DB)

SESSION_COOKIE_NAME = os.getenv('{coincode}_SESSION_COOKIE_NAME', '{coincode}_id').format(coincode=COINCODE.upper())
SESSION_PREFIX = os.getenv('{coincode}_SESSION_PREFIX', 'session:').format(coincode=COINCODE.upper())

REDIS_HOST = os.getenv('REDIS_HOST', '127.0.0.1')
REDIS_PORT = int(os.getenv('REDIS_PORT', 6379))
REDIS_PASSWD = os.getenv('REDIS_PASSWD', None)
REDIS_URI = "redis://"
if REDIS_PASSWD:
    REDIS_URI += f":{REDIS_PASSWD}"
REDIS_URI += f"@{REDIS_HOST}:{REDIS_PORT}"

BIND_HOST = os.getenv("BIND_HOST", "0.0.0.0")
if not BIND_HOST:
    raise Exception("BIND_HOST missing")
BIND_PORT = os.getenv("BIND_PORT", 5004)
if not BIND_PORT:
    raise Exception("BIND_PORT missing")

HOSTNAME = os.getenv("{coincode}_HOSTNAME", socket.gethostname()).format(coincode=COINCODE.upper())

# If using a local RPC, no need for --rpc-login credentials unless you're binding wallet-rpc to 0.0.0.0. If you are, you're bad.
# elif, remote wallet-rpc, enable --rpc-login and enter credentials below.
RPC_LOCATION = os.getenv('FUND_WRKZ_URL', None)
FUND_WRKZ_ADDRESS = os.getenv('FUND_WRKZ_ADDRESS', None)
RPC_USERNAME = None
RPC_PASSWORD = None
RPC_HEADER = os.getenv('FUND_WRKZ_HEADER', None)

RPC_LOCATION_DEVFUND = os.getenv('FUND_DEV_URL', None)
RPC_USERNAME_DEVFUND = None
RPC_PASSWORD_DEVFUND = None
RPC_HEADER_DEVFUND = os.getenv('FUND_WRKZDEV_HEADER', None)

FUNDING_CATEGORIES = [
    'wallets',
    'marketing',
    'core',
    'misc',
    'design'
]

FUNDING_STATUSES = collections.OrderedDict()
FUNDING_STATUSES[0] = 'disabled'
FUNDING_STATUSES[1] = 'proposal'
FUNDING_STATUSES[2] = 'funding'
FUNDING_STATUSES[3] = 'wip'
FUNDING_STATUSES[4] = 'completed'

USER_REG_DISABLED = False

PROPOSAL_CONTENT_DEFAULT = """
#### Why?

What problem(s) are you trying to solve?

#### How much?

What is the total cost in {coincode}? List expenses per item. Total hours of work and per hour rate. What exchange rates are you using?

#### What?

Describe your idea in detail.

#### Milestones?

Break down tasks into different stages. Each stage should have the estimated number of days/weeks needed and cost per stage.

#### Outcomes?

What will be delivered? What goals will be reached?

#### Why you?

What skills and experience do you have?
""".strip().format(coincode=COINCODE.upper())
